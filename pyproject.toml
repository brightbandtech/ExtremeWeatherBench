[project]
name = "extremeweatherbench"
version = "0.1.0"
description = "Benchmarking weather and weather AI models using extreme events"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "cartopy>=0.24.1",
    "dacite>=1.8.1",
    "gcsfs>=2024.12.0",
    "geopandas>=1.0.1",
    "joblib>=1.4.2",
    "matplotlib>=3.10.0",
    "numpy>=2.2.0",
    "pandas>=2.2.3",
    "pyarrow>=19.0.1",
    "pyyaml>=6.0.2",
    "regionmask>=0.13.0",
    "s3fs>=2024.12.0",
    "scikit-learn>=1.6.0",
    "scores>=2.0.0",
    "seaborn>=0.13.2",
    "tqdm>=4.67.1",
    "ujson>=5.10.0",
    "xarray[io]>=2024.11.0",
    "zarr==3.0.9",
    "kerchunk[dev]",
    "flox>=0.10.0",
    "click>=8.1.8",
    "sparse>=0.17.0",
    "polars>=1.32.1",
]

[project.optional-dependencies]
data-prep = ["fsspec>=2024.12.0"]
multiprocessing = ["dask[complete]>=2025.1.0", "distributed>=2025.1.0"]

[dependency-groups]
dev = [
    "bokeh>=3.6.3",
    "deptry>=0.23.0",
    "ipykernel>=6.29.5",
    "ipywidgets>=8.1.5",
    "isort>=6.0.1",
    "jupyterlab>=4.4.5",
    "mypy>=1.14.1",
    "pre-commit>=4.1.0",
    "pytest>=8.3.4",
    "pytest-cov>=6.0.0",
    "pytest-mock>=3.14.0",
    "ruff>=0.9.4",
    "types-pyyaml>=6.0.12.20241230",
]

[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["extremeweatherbench"]
package-dir = { "" = "src" }
include-package-data = true

[tool.setuptools.package-data]
extremeweatherbench = ["data/**/*", "data/**/.*"]

[project.scripts]
ewb = "extremeweatherbench.evaluate_cli:cli_runner"

[tool.uv.sources]
extremeweatherbench = { workspace = true }
kerchunk = { git = "https://github.com/fsspec/kerchunk" }

[tool.ruff]
line-length = 88
indent-width = 4
lint.ignore = []

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.ruff.lint.isort]
case-sensitive = true
